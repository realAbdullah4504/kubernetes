sudo tail -f /var/log/cloud-init-output.log


# Add the EKS chart repo
helm repo add eks https://aws.github.io/eks-charts

# Install the AWS Load Balancer Controller
helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
--set clusterName=kubernetes \
--set serviceAccount.create=true \
--set region=ap-south-1 \
--namespace kube-system

# ingress
helm upgrade --install ingress-nginx ingress-nginx \
--repo https://kubernetes.github.io/ingress-nginx \
--namespace ingress-nginx \
--create-namespace \
--set controller.service.type=LoadBalancer \
--set controller.service.annotations."service\.beta\.kubernetes\.io/aws-load-balancer-type"="nlb" \
--set controller.service.annotations."service\.beta\.kubernetes\.io/aws-load-balancer-scheme"="internet-facing" \
--set controller.service.annotations."service\.beta\.kubernetes\.io/aws-load-balancer-nlb-target-type"="instance" \
--set controller.service.annotations."service\.beta\.kubernetes\.io/aws-load-balancer-target-node-labels"="env=production"

kubectl delete validatingwebhookconfiguration ingress-nginx-admission
kubectl scale deployment ingress-nginx-controller --replicas=2 -n ingress-nginx


git clone https://github.com/realAbdullah4504/kubernetes.git
cd kubernetes

cd mongo-express-deployment
kubectl apply -f pv.yaml
kubectl apply -f mongo-depl.yaml -f mongodb-secret.yaml

cd dashboard
kubectl apply -f ingress.yaml


kubectl get nodes -o json | jq '.items[] | {name: .metadata.name, providerID: .spec.providerID}'

kubectl label nodes ip-172-31-42-24 env=production

sudo kubectl patch node $(hostname) -p "{\"spec\":{\"providerID\": \"aws:///ap-south-1/i-0a42c625e6cb3e098\"}}"

subnet labels kubernetes.io/role/elb=1
i-0a42c625e6cb3e098

#!/bin/bash
INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)
PRIVATE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)


# Set the providerID
PROVIDER_ID="aws:///${REGION}/${INSTANCE_ID}"

# Apply the patch for the dynamically generated node name
sudo kubectl patch node $(hostname) -p "{\"spec\":{\"providerID\": \"$PROVIDER_ID\"}}" 
sudo kubectl label nodes $(hostname) env=production

# Restart kubelet to apply the changes
sudo systemctl daemon-reload
sudo systemctl restart kubelet

